[package]
name = "monad-archive"
description = "Monad archive solution"
version = "0.1.0"
edition = "2021"

# this is necessary for criterion bench options
# https://bheisler.github.io/criterion.rs/book/faq.html#cargo-bench-gives-unrecognized-option-errors-for-valid-command-line-options
[lib]
bench = false

[[bin]]
name = "monad-archive-checker"
bench = false

[[bin]]
name = "monad-archiver"
bench = false

[[bin]]
name = "monad-indexer"
bench = false

[features]
default = []
mongodb-integration-tests = []

[dependencies]
monad-triedb-utils = { workspace = true }
monad-types = { workspace = true }

alloy-consensus = { workspace = true, features = ["k256"] }
alloy-primitives = { workspace = true, features = ["serde"] }
alloy-rlp = { workspace = true }
alloy-signer = { workspace = true }
alloy-signer-local = { workspace = true }
alloy-eips = { workspace = true }
alloy-rpc-types = { workspace = true }
aws-config = { workspace = true }
aws-sdk-dynamodb = { workspace = true }
aws-sdk-s3 = { workspace = true }
base64 = { workspace = true }
bytes = { workspace = true }
chrono = { workspace = true }
clap = { workspace = true, features = ["derive"] }
dashmap = { workspace = true }
enum_dispatch = { workspace = true }
eyre = { workspace = true }
futures = { workspace = true }
hex = { workspace = true }
mongodb = { workspace = true }
opentelemetry = { workspace = true }
opentelemetry_sdk = { workspace = true, features = ["rt-tokio"] }
opentelemetry-otlp = { workspace = true, features = ["metrics", "grpc-tonic"] }
opentelemetry-semantic-conventions = { workspace = true }
rayon = { workspace = true }
regex = { workspace = true }
reqwest = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
tempfile.workspace = true
tokio = { workspace = true, features = [
    "fs",
    "macros",
    "net",
    "rt-multi-thread",
    "sync",
] }
tokio-retry = { workspace = true }
tracing = { workspace = true, features = ["log"] }
tracing-subscriber = { workspace = true, features = ["env-filter", "json"] }
url = { workspace = true }

[dev-dependencies]
monad-eth-testutil = { workspace = true }
rand = { workspace = true }
